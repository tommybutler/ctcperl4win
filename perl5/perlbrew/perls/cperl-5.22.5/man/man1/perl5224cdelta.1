.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5224CDELTA 1"
.TH PERL5224CDELTA 1 "2018-01-01" "perl v5.22.5" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5224cdelta \- what is new for cperl v5.22.4
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes perl-only differences between the cperl 5.22.3
release and the cperl 5.22.4 release.
.PP
For \fBcperl\fR also see \fIChanges\fR and perlcperl
.SH "Security"
.IX Header "Security"
.SS "DynaLoader format string hardening"
.IX Subsection "DynaLoader format string hardening"
Replace all \f(CW\*(C`%\*(C'\fR characters in user-controlled library filenames, passed via
the system dl_error call verbatim to \f(CW\*(C`printf\*(C'\fR, without any arguments on the stack,
which could lead to execution of arbitrary stack code. No \s-1CVE.\s0
This affects all systems with dynamic loading where the attacker can cause a
dynamic loading error.
.PP
CVSSv2 Severity: 7.2 (AV:L/AC:L/Au:N/C:C/I:C/A:C/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:H/IR:H/AR:ND)
.SS "No Unicode confusables +UFFA0, +U3164"
.IX Subsection "No Unicode confusables +UFFA0, +U3164"
In deviation from Unicode 1.1 we treat the two \s-1HANGUL FILLER\s0 characters +UFFA0 and +U3164
not as valid ID_Start and ID_Continue characters for perl identifiers.
Variable and package names may not begin with them and may not contain them.
.PP
They are usually rendered as whitespace, and would lead to classic \s-1TR39\s0 confusables.
See <https://github.com/jagracey/Awesome\-Unicode#user\-content\-variable\-identifiers\-can\-effectively\-include\-whitespace> and <http://www.unicode.org/reports/tr39/>.
.PP
In a more Korean friendly environment, we could check for a ID_Start Hangul
filler if the next character is a valid Hangul ID_Continue character,
and allow it then.  Ditto for a ID_Continue Hangul filler if the
previous and next character is a valid Hangul ID_Start or ID_Continue
character, and allow it then.
But those fillers should be treated as whitespace, and should be ignored.
.PP
<http://www.unicode.org/L2/L2006/06310\-hangul\-decompose9.pdf> explains:
.PP
\&\fIThe two other hangul fillers \s-1HANGUL CHOSEONG FILLER\s0 (Lf),
i.e. lead filler, and \s-1HANGUL JUNGSEONG FILLER\s0 (Vf) are used as
placeholders for missing letters, where there should be at least one
letter.\fR
.PP
\&\fI... that leaves the (\s-1HALFWIDTH\s0) \s-1HANGUL\s0 FILLERs useless. Indeed,
they should not be rendered at all, despite that they have been given
the property Lo. Note that these FILLERs are also given the property
of Default_Ignorable_Codepoint.\fR
.PP
\&\fINote that the standard normal forms \s-1NFKD\s0 and \s-1NFKC ...\s0 return (in
all views) incorrect results for strings containing these
characters.\fR
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "B::C 1.54_08" 4
.IX Item "B::C 1.54_08"
Many Windows and cygwin fixes, for the old \s-1MSVC\s0 compiler, and
\&\s-1PERL_CORE\s0 test integration. Use many new core exports needed for
windows.
.Sp
Update perlcc to 2.21, handle multiple \-I and \-L arguments.
.Sp
Handle cperl \s-1OP_SIGNATURE.\s0
.Sp
Fix refcount of cop hints hashes with 5.22\-nt
[cperl #220] <https://github.com/perl11/cperl/issues/220>
.Sp
Better \s-1UVX L\s0 and U suffices.
.Sp
Handle shared \s-1IV\s0 and \s-1UV\s0 xpv structs,
  fixed 5.24 specific assertions, with shared xpviv/xpvuv.
  fixed wrong 32 bit ptr offset. re-enabled all 32bit tests.
.Sp
Handle changed subdirs-test target with newer \s-1EUMM.\s0
.IP "B::Deparse 1.37_01c" 4
.IX Item "B::Deparse 1.37_01c"
Add more cperl-specific ops:
\&\f(CW\*(C`aelem*_u\*(C'\fR, \f(CW\*(C`u_{add,subtract,multiply}\*(C'\fR, \f(CW\*(C`{i,n,s}_aelem{,_u}\*(C'\fR
.IP "Config::Perl::V 0.26_01" 4
.IX Item "Config::Perl::V 0.26_01"
cperl patches.
Add tests for 5.22 and 5.24.
Support some multi-line keys: ccflags ldflags lddlflags
Changed tests to use \fIdone_testing()\fR.
.IP "Cpanel::JSON::XS 3.0217" 4
.IX Item "Cpanel::JSON::XS 3.0217"
Improve error message with class based method calls,
when forgetting \->new. [#66] <https://github.com/rurban/Cpanel-JSON-XS/issues/66>
.Sp
Fix a off-by-one \s-1IV_MIN\s0 \-> \s-1NV\s0 overflow in decode_json.
[#67] <https://github.com/rurban/Cpanel-JSON-XS/issues/67> (xdg)
.Sp
Avoid encode_sv \s-1SEGV\s0 with \-Dusequadmath.
[#62] <https://github.com/rurban/Cpanel-JSON-XS/issues/62>
Fix quadmath \s-1NV\s0 stringification.
.Sp
Preserve numbers as numbers, enforce an added \f(CW.0\fR (xdg).
Also note that 42+\*(L"bar\*(R" will result >=5.10 in numbers not integers,
=> 42.0
.IP "Devel::PPPort 3.33_02" 4
.IX Item "Devel::PPPort 3.33_02"
Support the latest versions.
.Sp
cperl specific:
Minor \-Dfortify_inc fixes, kept our Hv macros,
fix _\|_attribute_\|_((warn_unused_result)) on windows.
.IP "Socket 2.021_02" 4
.IX Item "Socket 2.021_02"
Silence some \s-1CC\s0 warnings
.Sp
Fix my to our \f(CW$XS_VERSION\fR
.Sp
Check for max length before derefing by length (jhi) \s-1RT\s0 #111707
.IP "DynaLoader 2.04c" 4
.IX Item "DynaLoader 2.04c"
See \*(L"DynaLoader format string hardening\*(R" above.
.Sp
Silence some \s-1CC\s0 warnings, add changelog.
.IP "Storable" 4
.IX Item "Storable"
Silence some \s-1CC\s0 warnings, esp. on 32bit.
.IP "Config 6.21" 4
.IX Item "Config 6.21"
Improvements from cperl\-5.24:
.Sp
.Vb 7
\&    \-fix for readonly Makefile.PL (in core src tarballs)
\&    \-fix wrong SKIP headers
\&    \-skip in core make regen tests (\-\-tap)
\&    \-more 5.24 and cperl keys
\&    \-silence unused classname compiler warning
\&    \-link to Mock::Config in the docs to temp. write to %Config in tests.
\&    \-Dfortify_inc fixes
.Ve
.Sp
\&\-regen the XSConfig.t/Config_xs.PL key lists
.Sp
\&\-remove now generated/range operator-ed config_arg keys from XSConfig.t
 they are redundant
.Sp
\&\-add common keys d_memmem d_uselocale d_freelocale d_newlocale to \s-1CPAN\s0
.Sp
\&\-clean build product Config_xs_tmp.in
.Sp
\&\-PERL_UNUSED_ARG fix for 5.8.7
.Sp
\&\-Silence some \s-1CC\s0 warnings.
.IP "libnet 3.08" 4
.IX Item "libnet 3.08"
With our Net::Domain patch for darwin.
Improved utf8 and ipv6 support.
.IP "Pod::Checker 1.73" 4
.IX Item "Pod::Checker 1.73"
Now based on Pod::Simple, not on Pod::Parser anymore.
dos2unix
.IP "Devel-NYTProf" 4
.IX Item "Devel-NYTProf"
Silence some \s-1CC\s0 warnings.
.IP "Digest\-MD5" 4
.IX Item "Digest-MD5"
Improve \f(CW\*(C`d_u32align\*(C'\fR diagnostic message
.SH "Utility Changes"
.IX Header "Utility Changes"
.SS "\fIinstallperl\fP"
.IX Subsection "installperl"
.IP "\(bu" 4
Fixed regression from 5.22.1c for windows.
.SH "Configuration and Compilation"
.IX Header "Configuration and Compilation"
.IP "\(bu" 4
Added a \f(CW\*(C`make archclean\*(C'\fR target for \s-1POSIX\s0 platforms, which does not require
a new \f(CW\*(C`Configure\*(C'\fR call.
.IP "\(bu" 4
Fixed a couple of quadmath detection issues.
.SH "Internal Changes"
.IX Header "Internal Changes"
Changes which affect the interface available to \f(CW\*(C`XS\*(C'\fR code go here.  Other
significant internal changes for future core maintainers should be noted as
well.
.IP "\(bu" 4
SvREADONLY_off(sv) is only usable as statement, not as expression anymore.
It broke Sun C 5.12, in ByteLoader.
See [cperl #183] <https://github.com/perl11/cperl/issues/183>.
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "handle method calls on protected stashes" 4
.IX Item "handle method calls on protected stashes"
[cperl #171] <https://github.com/perl11/cperl/issues/171>
.Sp
Known bug upstream, not fixed there. This problem appears more often
with cperl with its protected coretypes than upstream.
.IP "Do not crash when inserting a non-stash into a stash" 4
.IX Item "Do not crash when inserting a non-stash into a stash"
Also do not treat \f(CW%:\fR as a stash.
.Sp
RT#128238 <https://rt.perl.org/Public/Bug/Display.html?id=128238>
.Sp
Fedora Patches 37, 36.
.IP "fedora: Fix precedence in hv_ename_delete" 4
.IX Item "fedora: Fix precedence in hv_ename_delete"
RT#128086 <https://rt.perl.org/Public/Bug/Display.html?id=128086>
.Sp
Fedora Patch35
.ie n .IP "fedora: Do not use unitialized memory in $h{\econst} warnings" 4
.el .IP "fedora: Do not use unitialized memory in \f(CW$h\fR{\econst} warnings" 4
.IX Item "fedora: Do not use unitialized memory in $h{const} warnings"
RT#128189 <https://rt.perl.org/Public/Bug/Display.html?id=128189>
.Sp
Fedora Patch34
.IP "fedora: Do not mangle errno from failed socket calls" 4
.IX Item "fedora: Do not mangle errno from failed socket calls"
RT#128316 <https://rt.perl.org/Public/Bug/Display.html?id=128316>
.Sp
Fedora Patch32
.IP "fedora: Backport memory leak when compiling a regular expression with a \s-1POSIX\s0 class" 4
.IX Item "fedora: Backport memory leak when compiling a regular expression with a POSIX class"
E.g. when \f(CW\*(C`use re \*(Aqstrict\*(Aq;\*(C'\fR is used.
.Sp
RT#128313 <https://rt.perl.org/Public/Bug/Display.html?id=128313>
.Sp
Fedora Patch31
.IP "suse: fix regexp backref overflows" 4
.IX Item "suse: fix regexp backref overflows"
With many backref groups (>I32)
.IP "suse: perl\-saverecontext.diff RT#76538" 4
.IX Item "suse: perl-saverecontext.diff RT#76538"
Handle get magic with globs in the regex compiler.
Correctly restore context, esp. when loading unicode swashes.
Reported at 5.12, patched for suse 5.14, still ignored with 5.24.
.IP "locale race condition when switching to C for error messages" 4
.IX Item "locale race condition when switching to C for error messages"
A race condition which occurred when computing \f(CW"$!"\fR with threads
activated has been fixed.  This showed up only on Darwin platforms.
A related problem on Cygwin platforms involving \s-1UTF\-8\s0 strings has also
been fixed.
See \s-1RT\s0 #127708 <https://rt.perl.org/Public/Bug/Display.html?id=127708>
.ie n .IP "Fix crash with @a &.= etc." 4
.el .IP "Fix crash with \f(CW@a\fR &.= etc." 4
.IX Item "Fix crash with @a &.= etc."
See \s-1RT\s0 #128204 <https://rt.perl.org/Public/Bug/Display.html?id=128204>
.IP "Fix PERLIO=stdio dup on empty filehandle" 4
.IX Item "Fix PERLIO=stdio dup on empty filehandle"
See \s-1RT\s0 #63244 <https://rt.perl.org/Public/Bug/Display.html?id=63244>
or <http://bugs.debian.org/164615>, crashes from 5.8.8 to blead.
.Sp
\&\f(CW\*(C`env PERLIO=stdio perl \-e\*(Aqopen(F, "<&STDOUT")\*(Aq 1</dev/null\*(C'\fR
.IP "Fix crash from empty curcop in gp_free/ckWARN_d" 4
.IX Item "Fix crash from empty curcop in gp_free/ckWARN_d"
See \s-1RT\s0 #128597 <https://rt.perl.org/Public/Bug/Display.html?id=128597>.
.Sp
\&\f(CW\*(C`open my $fh, ">", \e$buf; my $sub = eval q|sub {die}|; $sub\->()\*(Aq\*(C'\fR
crashed in 5.22 to 5.24.1.
.IP "Fix crash when vivifying stub in deleted pkg" 4
.IX Item "Fix crash when vivifying stub in deleted pkg"
5.18 which added newSTUB, did not take into account
that a \s-1GV\s0 may have a null GvSTASH pointer, if its stash has been
freed, so this crashed.
See \s-1RT\s0 #128532 <https://rt.perl.org/Public/Bug/Display.html?id=128532>.
.Sp
\&\f(CW\*(C`delete $My::{"Foo::"}; \e&My::Foo::foo\*(C'\fR
crashed from 5.18 to 5.24.1.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
cperl 5.22.4 represents approximately 2 months of development since cperl 5.22.3
and contains approximately 900,000 lines of changes across 570 files from 13
authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 7,900 lines of changes to 120 .pm, .t, .c and .h files.
.PP
The following people are known to have contributed the improvements
that became cperl 5.22.4:
.PP
Reini Urban, Father Chrysostomos, Karl Williamson, David Mitchell, Daniel
Dragan, Tony Cook, Lukas Mai, Niko Tyni, H.Merijn Brand, Hugo van der Sanden,
Dagfinn Ilmari Mannsa\*oker, Aaron Crane, Dan Collins.
.PP
The list above is almost certainly incomplete as it is automatically generated
from version control history. In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0 modules
included in Perl's core. We're grateful to the entire \s-1CPAN\s0 community for
helping Perl to flourish.
.PP
For a more complete list of all of Perl's historical contributors, please see
the \fI\s-1AUTHORS\s0\fR file in the Perl source distribution.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
https://rt.perl.org/ .  There may also be information at
http://www.perl.org/ , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the \fIperlbug\fR program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.
.PP
If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at <https://github.com/perl11/cperl/issues>.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to perl5\-security\-report@perl.org.  This points to a closed subscription
unarchived mailing list, which includes all the core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
\&\s-1CPAN.\s0
.PP
If you trust the cperl developers more, please send an email to
them. The p5p security teams skips many security issues, or are
unwilling to fix them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
