.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PERL5222CDELTA 1"
.TH PERL5222CDELTA 1 "2018-01-01" "perl v5.22.5" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
perl5222cdelta \- what is new for cperl v5.22.2
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes perl-only differences between the cperl 5.22.1
release and the cperl 5.22.2 release.
.PP
For \fBcperl\fR also see \fIChanges\fR and perlcperl
.SH "Core Enhancements"
.IX Header "Core Enhancements"
.IP "\(bu" 4
Harmonize the lengths, counts and sizes for hash and array indices
from a broken mix of int/I32 to SSize_t (31/63bit) with silent
truncation overflows and unreachable elements.  Changed many wrong \s-1API\s0
sizes.
.Sp
\&\s-1STRLEN\s0 (i.e.  Size_t) for string lengths, and I32 for \s-1HEK\s0 lengths,
also used by names.
.Sp
Array and hash indices and lengths are now SSize_t (signed 31/63
bits), but really should be \s-1UV\s0 or Size_t. Esp. the hash riter is not
I32 anymore, so you can now iterate over all hash keys, but there were
many other silent truncations in helper functions.
.Sp
This allows on 64bit systems 64bit string lengths, and 63bit array and
hash sizes, but limits on 32bit systems the max. hash size from 32 to
31bit.
.Sp
CVSSv2 Severity: 7.3  (AV:N/AC:L/Au:N/C:P/I:P/A:P/E:U/RL:OF/RC:C/CDP:MH/TD:H/CR:M/IR:M/AR:M)
.IP "\(bu" 4
Increased the parser tokenbuffer from 256 to 1024 characters, thus bumping
the maximal length of identifiers and parsed names from 251\-255 chars to
1200\-1023 characters.
.IP "\(bu" 4
Safer \s-1INC\s0 path. It does not include \*(L".\*(R" anymore, unless you set the env
\&\f(CW\*(C`PERL_USE_UNSAFE_INC=1\*(C'\fR. (#118)
.Sp
CVSSv2 Severity: 8.5 (AV:N/AC:M/Au:S/C:C/I:C/A:C)
.IP "\(bu" 4
Hash security: Disable \s-1PERL_HASH_SEED_DEBUG\s0 with \-t or \-T (#114)
.IP "\(bu" 4
Better hash table collision resolution strategy: \s-1PERL_PERTURB_KEYS_TOP\s0
Still a linked list, but move the found element to the top. This disables
\&\s-1PERL_HASH_RANDOMIZE_KEYS.\s0 It's still a very primitive and slow hash table,
but we wait for a complete rewrite until the next major release.
.IP "\(bu" 4
Better support for \-DC and \-DCv debugging, with new \s-1REFCNT\s0 statistics.
Added CowREFCNT_inc,dec and overflow assertions.
.IP "\(bu" 4
Re-added the \f(CW\*(C`PL_sv_objcount\*(C'\fR interpreter-global variable used to track the total
number of Perl objects in the interpreter, which was removed in Perl 5.20.
It is beneficial for all scripts which do not create objects in global scope,
so we dont have to check all remaining \s-1SV\s0's to call a potential \s-1DESTROY\s0 method.
.Sp
This broke binary back-compatibility on \s-1MULTIPLICITY\s0 and \s-1ITHREAD\s0 builds with
cperl\-5.22.1.
.IP "\(bu" 4
Minor improvements in the lexer code (\fItoke.c\fR). Added helper
functions, LEX_TYPE_*BRACKETS_ON|OFF macros, better \s-1DEBUGGING\s0 support.
regen_perly keeps now useful temp. files.
.IP "\(bu" 4
Added support for static \s-1HEK\s0 and \s-1AV\s0 with B::C, with 6\-10% memory
improvements for compiled code.
.Sp
Add \s-1HEK_STATIC,\s0 AvSTATIC, and av_uncow.
Allows \s-1COW\s0 (copy on write) and \s-1COG\s0 (copy on grow) for strings and arrays
with embedders and the compiler.
.IP "\(bu" 4
Support static lexical warnings. Honor op_static with COPs. This helps
producing better compiled perlcc code. (#70)
.IP "\(bu" 4
Support new ccflags \-DPERL_SV_DEBUG_FIELDS for easier flags bitfields
debugging, even without \-DDEBUGGING.
.IP "\(bu" 4
Enhanced the warnings message for warnings 'redefine' to print the caller
location also. (# 113)
Note that this did not violate the documented diagnostics in perldiag.pod,
but the tests for Sub::Install and Test::Trap still need to be patched.
.IP "\(bu" 4
Add support for additional \fIpod/perlcdelta.pod\fR in \fIPorting/pod_rules.pl\fR.
.IP "\(bu" 4
Better IPv6 Support:
.Sp
Probe for I_NETINET6_IN6, I_NETINET_IP, I_NETINET_IP6 defines.
Added the i_netinet_ip, i_netinet_ip6, i_netinet6_in6 Config keys.
Added IPv6 to Net::Ping.
.SH "Core Enhancements from Perl5"
.IX Header "Core Enhancements from Perl5"
Backported some fixes from p5p, merged with perl\-5.22.2.
.IP "\(bu" 4
Improved performance of aassign: my (...) = (... , ...); by 10\-40%.
.IP "\(bu" 4
Improved performance of \fIindex()\fR by 50\-70%.
.IP "\(bu" 4
Creating *{\*(L"_<$filename\*(R"} Perl debugger data structures (see
\&\*(L"Debugger Internals\*(R" in perldebguts) for XSUBs and const subs has been
removed.  This removed one glob/scalar combo for each unique \f(CW\*(C`.c\*(C'\fR
file that XSUBs and const subs came from.  On startup (\f(CW\*(C`perl \-e0\*(C'\fR)
about half a dozen glob/scalar debugger combos were created.  Loading
\&\s-1XS\s0 modules created more glob/scalar combos.  These things were created
regardless if the perl debugger was being used or not, unlike for pure
perl subs, and ignores that the perl debugger can not debug C code.
.IP "\(bu" 4
Make Configure \-O behaviour the default
.IP "\(bu" 4
Support reproducible builds via \s-1PERL_BUILD_DATE\s0
.IP "\(bu" 4
Fixed umask for \fImkstemp\fR\|(3) calls for older glibc versions
.Sp
With v5.21.0\-67\-g60f7fc1, perl started setting umask to 0600
before calling \fImkstemp\fR\|(3), and then restoring it afterwards. This is
wrong as it tells \fIopen\fR\|(2) to strip the owner read and write bits from
the given mode before applying it, rather than the intended negation of
leaving only those bits in place.
.Sp
On modern systems which call \fIopen\fR\|(2) with mode 0600 in \fImkstemp\fR\|(3),
this clears all the created temporary file permissions. However,
any systems that use mode 0666 in \fImkstemp\fR\|(3) (like ancient versions
of glibc) now create a file with permissions 0066, leaving world
read and write permission regardless of current umask.
.SH "Modules and Pragmata"
.IX Header "Modules and Pragmata"
.SS "New Modules in Core"
.IX Subsection "New Modules in Core"
.IP "B\-C 1.54_02" 4
.IX Item "B-C 1.54_02"
With many cperl-specific improvements, global destruction fixes
and \s-1PERL_CORE\s0 specific test changes.
.Sp
\&\s-1MS\s0 Windows with \s-1MSVC\s0 is not yet ready, sorry.
.IP "Cpanel-JSON-XS 3.0213" 4
.IX Item "Cpanel-JSON-XS 3.0213"
A fast and standard \s-1JSON\s0 en\-/decoder. You should not use \s-1PP.\s0
.IP "Devel-NYTProf 6.03" 4
.IX Item "Devel-NYTProf 6.03"
A fast and standard profiler.
With \s-1PERL_CORE\s0 specific test and build changes.
.IP "Internals-DumpArenas 0.12_03" 4
.IX Item "Internals-DumpArenas 0.12_03"
The only way to test sv_dump properly.
.IP "YAML-LibYAML 0.70c" 4
.IX Item "YAML-LibYAML 0.70c"
A fast and standard \s-1YAML\s0 en\-/decoder. You should not use \s-1PP.\s0
With most compiler warnings fixed, \s-1PERL_CORE\s0 specific test changes
and new options \f(CW\*(C`IndentlessMap\*(C'\fR for \f(CW\*(C`YAML.pm\*(C'\fR compatibility and \f(CW\*(C`NonStrict\*(C'\fR
mode to pass the validator tests and make it usable for \f(CW\*(C`CPAN.pm\*(C'\fR.
.IP "Term::ReadKey 2.33" 4
.IX Item "Term::ReadKey 2.33"
Needed for the perl debugger with readline.
.SS "Updated Modules and Pragmata"
.IX Subsection "Updated Modules and Pragmata"
.IP "B::Debug 1.23_01" 4
.IX Item "B::Debug 1.23_01"
Skip \s-1CORE\s0 test with B::Flags \s-1XS\s0 installed in sitearch.
.IP "podlators 4.0.7" 4
.IX Item "podlators 4.0.7"
Remove unneeded pod2*.PL customizations
Fix \s-1VERSION_FROM\s0 in make_ext.pl
.IP "perlfaq 5.021011" 4
.IX Item "perlfaq 5.021011"
.PD 0
.IP "if 0.0604" 4
.IX Item "if 0.0604"
.PD
Improved error message for no if.
.IP "experimental 0.016" 4
.IX Item "experimental 0.016"
Added bitwise
Removed lexical_topic, new max_version check
.IP "base 2.23" 4
.IX Item "base 2.23"
.PD 0
.IP "autouse 1.11" 4
.IX Item "autouse 1.11"
.IP "autodie 2.29" 4
.IX Item "autodie 2.29"
.IP "Win32API::File 0.1203" 4
.IX Item "Win32API::File 0.1203"
.PD
Numify \f(CW$fd\fR in \fIOsFHandleOpen()\fR
.IP "Unicode::Normalize 1.25" 4
.IX Item "Unicode::Normalize 1.25"
Added Normalize.xs
.IP "Unicode::Collate 1.14" 4
.IX Item "Unicode::Collate 1.14"
Update Unicode::Collate::CJK::Korean
.IP "Thread::Queue 3.07" 4
.IX Item "Thread::Queue 3.07"
Added limit to set or return the max. size for a queue
.IP "Term::Cap 1.17" 4
.IX Item "Term::Cap 1.17"
.PD 0
.IP "Term::ANSIColor 4.05" 4
.IX Item "Term::ANSIColor 4.05"
.IP "Pod::Simple 3.32" 4
.IX Item "Pod::Simple 3.32"
.IP "Perl::OSTyp 1.009" 4
.IX Item "Perl::OSTyp 1.009"
.PD
Handle $^O sco
.IP "PathTools 3.62" 4
.IX Item "PathTools 3.62"
Added AmigaOS support.
.IP "Socket 2.021_01 (private)" 4
.IX Item "Socket 2.021_01 (private)"
Added the IPV6_* constants needed for Net::Ping.
Include netinet/ip.h, netinet/ip6.h, netinet6/in6.h if valid.
.IP "Net-Ping 2.50 (private)" 4
.IX Item "Net-Ping 2.50 (private)"
Upstream development stalled at both cpan and p5p.
Now also at https://github.com/rurban/net\-ping
.Sp
New Features:
.Sp
\&\- Handle IPv6 addresses and the \s-1AF_INET6\s0 family.
.Sp
\&\- Added the optional family argument to most methods.
  valid values: 6, \*(L"v6\*(R", \*(L"ip6\*(R", \*(L"ipv6\*(R", \s-1AF_INET6\s0
.Sp
\&\- new can take now named arguments, a hashref.
.Sp
\&\- Added the following named arguments to new:
  gateway host bind retrans pingstring source_verify econnrefused
  \s-1IPV6_USE_MIN_MTU IPV6_RECVPATHMTU IPV6_HOPLIMIT\s0
.Sp
\&\- Added the wakeonlan method
.Sp
\&\- Improve argument default handling
.Sp
\&\- Added missing documentation
.IP "bignum 0.42" 4
.IX Item "bignum 0.42"
uses new Math::Big*, fixing inf/nan.
fix bignum::bpi, use \fIbpi()\fR as a class method, not a function.
.IP "Math::BigInt::FastCalc 0.40" 4
.IX Item "Math::BigInt::FastCalc 0.40"
Only minor changes
.IP "Math::BigRat 0.260802" 4
.IX Item "Math::BigRat 0.260802"
Fix \fIblog()\fR for inf/nan, and more.
See <https://metacpan.org/changes/distribution/Math\-BigRat>
.IP "Math::BigInt 1.999716" 4
.IX Item "Math::BigInt 1.999716"
Tons of changes from 1.999701
See <https://metacpan.org/changes/distribution/Math\-BigInt>
.IP "Locale::Codes 3.38" 4
.IX Item "Locale::Codes 3.38"
But kept the deprecated \f(CW\*(C`Locale::Codes::Country::alias_code\*(C'\fR function.
.Sp
Improved test suite (and made some changes to Codes.pm) based on
Devel::Cover.
Test suite now has 100% coverage.
.IP "IPC::SysV 2.06" 4
.IX Item "IPC::SysV 2.06"
\&\fIshmat()\fR with illegal id fails and sets errno
.IP "IPC::Cmd 0.94" 4
.IX Item "IPC::Cmd 0.94"
* move _\|_END_\|_ above \s-1POD\s0 in documentation (plicease)
.Sp
* Don't clobber \f(CW$SIG\fR{_\|_DIE_\|_} and \f(CW$SIG\fR{_\|_WARN_\|_} in \fIopen3_run()\fR (avar)
.Sp
* Fix 'terminate_on_signal' segfaulting (Petya Kohts)
.Sp
* Fix usage of fcntl(..., F_GETFL, ...) (tonyc)
.IP "Getopt::Long 2.48" 4
.IX Item "Getopt::Long 2.48"
Fixed gnu_getopt option not 100% identical to \s-1GNU\s0 getopt
[\s-1RT\s0 #12675] <https://rt.cpan.org/Ticket/Display.html?id=39052>
.Sp
Fixed parsing valid real numeric values, e.g. \-\-num=.1
[\s-1RT\s0 #89513] <https://rt.cpan.org/Ticket/Display.html?id=89513>
.Sp
\&\s-1PAT_FLOAT\s0 => \*(L"[\-+]?(?=[0\-9.])[0\-9_]*(\e.[0\-9_]+)?([eE][\-+]?[0\-9_]+)?\*(R";
.IP "File::Path 2.12" 4
.IX Item "File::Path 2.12"
Tons of fixes from 2.09
.IP "ExtUtils::ParseXS 3.30" 4
.IX Item "ExtUtils::ParseXS 3.30"
Fix quoting if $^X has spaces
.IP "ExtUtils::Command removed" 4
.IX Item "ExtUtils::Command removed"
Now merged into ExtUtils\-MakeMaker\-7.10
.IP "ExtUtils::CBuilder 0.280224" 4
.IX Item "ExtUtils::CBuilder 0.280224"
Use warnings/strict on all modules
.IP "Digest\-MD5 2.55_01" 4
.IX Item "Digest-MD5 2.55_01"
cperl only:
Fix alignment probe for 64bit
and enforce a \s-1SIGBUS\s0 on intel also (at least with
gnu c compatible compilers: gcc, clang, icc) to
mimic errors on other strict platforms: sparc, mips, ppc
.Sp
Allows now 64bit and darwin multiarch to be probed.
.Sp
Adds now coverage for the previously never tested branch
for \-UU32_ALIGNMENT_REQUIRED.
.Sp
Fixes \s-1RT\s0 #77919
.Sp
See https://github.com/rurban/digest\-md5/tree/intel\-align\-rt77919
.IP "Devel-PPPort 3.32_02" 4
.IX Item "Devel-PPPort 3.32_02"
cperl added support for 5.16 binary names
See https://github.com/rurban/Devel\-PPPort/tree/516gvhv
.IP "Config-Perl-V 0.25_01" 4
.IX Item "Config-Perl-V 0.25_01"
Added v5.24 and cperl support.
.IP "Carp 1.38" 4
.IX Item "Carp 1.38"
\&\f(CW$Carp::MaxArgNums\fR is no longer treated as if it was one larger.
.IP "CPAN-Meta-YAML 0.018" 4
.IX Item "CPAN-Meta-YAML 0.018"
Removed \fIt/00\-report\-prereqs.dd\fR template.
.Sp
Generated from \f(CW\*(C`ETHER/YAML\-Tiny\-1.69\*(C'\fR
.Sp
Tests no longer print to stderr unnecessarily. This makes core perl
builds a little quieter.
.Sp
The Test::More dependency has been reduced to 0.88 by emulating
\&'subtest' for those tests that need it.
.Sp
Instead of erroring on duplicate keys found in a hash (introduced in
version 1.63), now we only warn. This fixes an issue in Strawberry Perl
(via CPAN::Meta::YAML) when parsing a configuration file.
.IP "CPAN-Meta-Requirements 3.140c" 4
.IX Item "CPAN-Meta-Requirements 3.140c"
Handle cperl-specific 'c' version suffices.
.Sp
Protect internal _isa_version from non-refs that pass
\&\->isa(version)
.Sp
Added method for getting structured requirements
.Sp
In fixing preservation of \*(L"0.00\*(R", some Module => 0 optimizations were
lost; this restores those optimizations
.IP "Pod::Usage 1.68" 4
.IX Item "Pod::Usage 1.68"
CPAN#110443: [\s-1PATCH\s0] fix \-perldoc option in \fIpod2usage()\fR method.
added missing '\-'
.Sp
CPAN#110446: [feature request] \-perldocopt for supplying perldoc options
added this option; split of string on whitespace is not optimal, but
should do the job
.IP "Test::Harness 3.36" 4
.IX Item "Test::Harness 3.36"
Accept \s-1YAML\s0 with trailing whitespace in header (Maik Hentsche)
.IP "Filter::Util::Call 1.55" 4
.IX Item "Filter::Util::Call 1.55"
Improved Filter documentation, esp. document that _\|_DATA_\|_ is not
filtered.
.IP "Scalar-List-Utils 1.45" 4
.IX Item "Scalar-List-Utils 1.45"
Renamed existing \fIuniq()\fR to \fIuniqstr()\fR
Canonicalise undef to {empty string,zero} in uniq{str,num}()
Add a new \fIuniq()\fR with more DWIMish semantics around undef
.Sp
Fix uses of \s-1GET\s0 magic by the uniq*() family of functions. \s-1GET\s0 magic is
now always invoked exactly once if it exists.
.Sp
Added \fIList::Util::uniq()\fR and \fIuniqnum()\fR
.Sp
Fix build on non\-C99 compilers
.Sp
* Avoid divide-by-zero exception if \fIproduct()\fR's accumulator is \s-1IV\s0 zero
  (\s-1RT105415\s0)
* Possible fix for SvTEMP issues in first and any/all/none/notall
  (\s-1RT96343\s0)
.IP "Encode 2.84" 4
.IX Item "Encode 2.84"
Encode::MIME::Header
.Sp
Both decoder and encoder are rewritten by Pali Roha\*'r.
Encoder should be now fully compliant of \s-1RFC 2047.\s0
Decoder is less strict to be able to decode
strings generated by old versions of this module.
This fixed a couple of related decode('MIME\-header') /
encode('MIME\-header') bugs and tickets.
.Sp
Encode::Unicode
.Sp
Fix RT#107043: If no \s-1BOM\s0 is found, the routine dies.
When you decode from \s-1UTF\-\s0(16|32) without \-BE or \s-1LE\s0 without \s-1BOM,\s0
Encode now assumes \s-1BE\s0 accordingly to \s-1RFC2781\s0 and the Unicode
Standard version 8.0
.Sp
Precompile 1252 table as that is now the Pod::Simple default
.Sp
Fixed compilation under \-pedantic
.IP "Time::HiRes 1.9732" 4
.IX Item "Time::HiRes 1.9732"
Compilation cleanup, remove hrt_ualarm, hrt_ualarm_itimer
.Sp
new constants: \s-1CLOCK_BOOTTIME CLOCK_HIGHRES CLOCK_MONOTONIC_COARSE
CLOCK_MONOTONIC_PRECISE CLOCK_MONOTONIC_RAW CLOCK_REALTIME_COARSE
CLOCK_REALTIME_FAST CLOCK_REALTIME_PRECISE CLOCK_SECOND\s0
[\s-1RT\s0 #111170] <https://rt.cpan.org/Public/Bug/Display.html?id=111170>
.Sp
\&\fIclock_getres()\fR, \fIclock_gettime()\fR, \fIclock_nanosleep()\fR emulation for \s-1OS X\s0
[\s-1RT\s0 #78566] <https://rt.cpan.org/Public/Bug/Display.html?id=78566>
.IP "Storable 2.53_03" 4
.IX Item "Storable 2.53_03"
Add new optional flags argument to \fIretrieve()\fR/\fIthaw()\fR for flags, or set new
global \f(CW$Storable::flags:\fR 2 for \s-1BLESS_OK\s0 | 4 \s-1TIE_OK.\s0 default 6.
With 0 disable blessing and tieing of objects for proper security.
.Sp
Compute \s-1CAN_FLOCK\s0 at compile-time, to avoid Config in perlcc compiled binaries.
.Sp
Broke support for restoring restricted hashes [perl #73972] with the new
default \s-1PERL_PERTURB_KEYS_TOP\s0 strategy.
.IP "CPAN::Meta (private)" 4
.IX Item "CPAN::Meta (private)"
Favour the new builtin \s-1XS YAML\s0 and \s-1JSON\s0 variants over \s-1PP.\s0
Improve the validator tests.
.IP "Parse::CPAN::Meta (private)" 4
.IX Item "Parse::CPAN::Meta (private)"
Favour the new builtin \s-1XS YAML\s0 and \s-1JSON\s0 variants over \s-1PP.\s0
.IP "ExtUtils::Constant 0.23_03" 4
.IX Item "ExtUtils::Constant 0.23_03"
Fixed fatal typos, moved from cpan to dist.
.IP "Module::CoreList 5.20160225c" 4
.IX Item "Module::CoreList 5.20160225c"
Fixed all 'c' suffix version checks.
.IP "CPAN::Meta::Requirements (private)" 4
.IX Item "CPAN::Meta::Requirements (private)"
Handle 'c' suffix version checks.
.Sp
cperl accepts versions with and without c, and should not warn about not
existing, builtin modules (XSLoader, DynaLoader, strict, attributes) or
unparsable versions. [cperl #104]
.Sp
* Accept the c suffix
* perl5 should fail with a c version.
* A requirement of a c version can only be fulfilled by cperl (currently).
.IP "\s-1CPAN\s0 (private)" 4
.IX Item "CPAN (private)"
Fix prerequisite and version checks,
Allow cperl c suffices, Honor cperl builtin modules
.IP "ExtUtils::MakeMaker 8.04_03 (private)" 4
.IX Item "ExtUtils::MakeMaker 8.04_03 (private)"
Protect our cperl changes and non-upstream improvements:
.Sp
Fixed prereq check for cperl builtins,
\&'c' version suffix support,
make \-s silencing,
fixed wrong Config dependencies,
PERL_USE_UNSAFE_INC=1,
call darwin dsymutil
.IP "Config 6.19" 4
.IX Item "Config 6.19"
Config is now a \s-1XS\s0 module, synced with \s-1CPAN\s0 as XSConfig.
The Config tables are now readonly, and many more memory improvements.
.IP "B::Concise 0.998c" 4
.IX Item "B::Concise 0.998c"
Support gv(cvname). Do not print gv(\s-1IV\s0 \e\*(L"$$\*(R"), the prototype as ref,
rather the name of the cvref. [cperl #96]
.Sp
Avoid uninit hr\->name warning.
.IP "Pod::Simple" 4
.IX Item "Pod::Simple"
Stabilize broken t/search50.t search test
.IP "threads 2.02_01" 4
.IX Item "threads 2.02_01"
Protect \f(CW\*(C`ithread_free\*(C'\fR from deleted \f(CW\*(C`PL_modglobal\*(C'\fR during global destruction.
.IP "ExtUtils::Embed 1.34c" 4
.IX Item "ExtUtils::Embed 1.34c"
Optimize \f(CW\*(C`boot_DynaLoader\*(C'\fR, fix a couple of stack errors.
.IP "Test::Harness" 4
.IX Item "Test::Harness"
Fix 2 tests broken with readonly Config.
.IP "Time::HiRes 1.9727_02" 4
.IX Item "Time::HiRes 1.9727_02"
To improve parallel builds on Windows.
.IP "XSLoader 1.01c" 4
.IX Item "XSLoader 1.01c"
Support utf8\-encoded \s-1XS\s0 modulenames.
Fixed load_file 2nd arg.
Improve load_file errmsg, print the missing sofile.
Protect from underflow: use a signed i counter, which can underflow
Fixed memory corruption caused by a negative SvCUR. \s-1GH\s0 #66
Use labs instead of abs on an 64bit \s-1IV\s0 value.
.Sp
Beware: untested and platform incompatible.
.IP "DynaLoader 2.01c" 4
.IX Item "DynaLoader 2.01c"
Fixed typo \f(CW@shared_objects\fR. It is named \f(CW@dl_shared_objects\fR.
This broke \f(CW\*(C`perlcc \-\-staticxs\*(C'\fR (#71)
.Sp
Set the \s-1IOK\s0 bit for dl_expand, caught by the compiler.
.IP "B 1.58_02" 4
.IX Item "B 1.58_02"
Fix B::UNOP_AUX::aux_list design with threads.
No 2nd cv arg, return the \s-1PADOFFSET\s0 not the \s-1SV.\s0 (#76)
.Sp
Export SVt_ types. (#80)
.IP "Safe 2.39_02c" 4
.IX Item "Safe 2.39_02c"
Fixed Safe version 'c' problem. Do not check the \s-1XS_VERSION\s0 of
Opcode, because it has a cperl 'c' suffix, which is not yet fully
supported in the version check code.
.IP "version" 4
.IX Item "version"
Add a scmp method for string comparison, needed to destinguish between
0.2 and 0.2c but only enforced if the version object is stringified.
Using eq is not enough.
.Sp
fix c suffix comparisons: stringify v0.2c to v0.2c, 0.2c to 0.2c
numify 0.2c to 0.002 [0 200], same as 0.2
.IP "constant 1.34" 4
.IX Item "constant 1.34"
Lower memory usage
.IP "IPC::SysV" 4
.IX Item "IPC::SysV"
Fixed shmat with negative id.
The negative argument will be interpreted as a very large unsigned value.
Coverity \s-1CWE\-687\s0
.IP "Scalar-List-Utils" 4
.IX Item "Scalar-List-Utils"
Avoid div by zero [coverity]
Note: fixed differently upstream, with much more branches than here.
.IP "IO-Compress, Compress\-Raw\-{Zlib,Bzip2} 2.069" 4
.IX Item "IO-Compress, Compress-Raw-{Zlib,Bzip2} 2.069"
static const some local tables.
.SS "Not Updated Modules and Pragmata"
.IX Subsection "Not Updated Modules and Pragmata"
This modules are currently not ready to be updated.
.IP "Pod::Checker 1.71" 4
.IX Item "Pod::Checker 1.71"
1.71 breaks t/porting/podcheck.t
[\s-1RT\s0 #113846] <https://rt.cpan.org/Ticket/Display.html?id=113846>
.IP "MakeUtils::MakeMaker 7.11_06" 4
.IX Item "MakeUtils::MakeMaker 7.11_06"
broken for \-Dfortify_inc, no \*(L".\*(R" in \f(CW@INC\fR
.IP "version 0.9916" 4
.IX Item "version 0.9916"
Broken new \*(L"_\*(R" logic when merged with our 'c' suffix logic.
.SH "Platform Support"
.IX Header "Platform Support"
.SS "Platform-Specific Notes"
.IX Subsection "Platform-Specific Notes"
.IP "Win32" 4
.IX Item "Win32"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
A new build option \f(CW\*(C`USE_NO_REGISTRY\*(C'\fR has been added to the makefiles.  This
option is off by default, meaning the default is to do Windows registry lookups.
This option stops Perl from looking inside the registry for anything.  For what
values are looked up in the registry see perlwin32.  Internally, in C, the
name of this option is \f(CW\*(C`WIN32_NO_REGISTRY\*(C'\fR.
.IP "\(bu" 4
The behavior of Perl using \f(CW\*(C`HKEY_CURRENT_USER\eSoftware\ePerl\*(C'\fR and
\&\f(CW\*(C`HKEY_LOCAL_MACHINE\eSoftware\ePerl\*(C'\fR to lookup certain values, including
\&\f(CW%ENV\fR vars starting with \f(CW\*(C`PERL\*(C'\fR has changed.  Previously, the 2 keys were
checked for entries at all times through Perl processes life time even if they
did not exist.  For performance reasons, now, if the root key (i.e.
\&\f(CW\*(C`HKEY_CURRENT_USER\eSoftware\ePerl\*(C'\fR or \f(CW\*(C`HKEY_LOCAL_MACHINE\eSoftware\ePerl\*(C'\fR) does
not exist at process start time, it will not be checked again for \f(CW%ENV\fR
override entries for the remainder of the Perl processes life.  This more
closely matches Unix behaviour in that the enviroment is copied or inherited on
startup and changing the variable in the parent process or another process or
editing <.bashrc> will not change the enviromental variable in other existing,
running, processes.
.IP "\(bu" 4
Windows support was added. There is also new support for parallel builds.
The windows smokes are done via appveyor, on \s-1MSVC 10\s0 and \s-1MSVC 12,\s0 on 32bit and 64bit,
in optimized Release mode only. No mingw/gcc builds yet.
.IP "\(bu" 4
One glob fetch was removed for each \f(CW\*(C`\-X\*(C'\fR or \f(CW\*(C`stat\*(C'\fR call whether done from
Perl code or internally from Perl's C code. The glob being looked up was
\&\f(CW\*(C`${^WIN32_SLOPPY_STAT}\*(C'\fR which is a special variable. This makes \f(CW\*(C`\-X\*(C'\fR and
\&\f(CW\*(C`stat\*(C'\fR slightly faster.
.IP "\(bu" 4
During Miniperl's process startup, during the build process, 4 to 8 \s-1IO\s0 calls
related to the process starting \f(CW\*(C`.pl\*(C'\fR and the \f(CW\*(C`buildcustomize.pl\*(C'\fR file were
removed from the code opening and executing the first 1 or 2 \f(CW\*(C`.pl\*(C'\fR files.
.IP "\(bu" 4
Avoid access to uninitialized memory in win32 \fIcrypt()\fR.
.Sp
Previously the Win32 crypt \fIimplementation()\fR would access the first
and second characters of the salt, even if the salt was zero length
.RE
.RS 4
.RE
.IP "Darwin" 4
.IX Item "Darwin"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Fixed global destruction with threads on darwin.
.IP "\(bu" 4
Darwin 11.0 (Lion, July 2011) and newer is no multiarch.
There's no \s-1PPC\s0 support anymore. Use no
\&\f(CW\*(C`env MACOSX_DEPLOYMENT_TARGET=10.6\*(C'\fR (Snow Leopard) for ld.
.Sp
This fixes the darwin byteorder to be probed at compile-time, and
the d_u32align probe on newer x86_64 darwins.
.RE
.RS 4
.RE
.IP "Other" 4
.IX Item "Other"
.RS 4
.PD 0
.IP "\(bu" 4
.PD
Enforce \s-1SIGBUS\s0 when accessing unaligned words with d_u32align /
U32_ALIGNMENT_REQUIRED even on Intel CPUs by setting the \s-1AC\s0 (alignment
check) \s-1EFLAGS.\s0
.Sp
Fixed the broken d_u32align probe in Configure and Digest::MD5, broken for
darwin and Intel 64bit.
.IP "\(bu" 4
Added a Porting/release_cperl.pod release guide for various platforms,
debian, rpm, bsd, osx, windows packaging.
.IP "\(bu" 4
Improved support for threaded builds.
.IP "\(bu" 4
Better DynaLoader support for os2, symbian, Netware.
.RE
.RS 4
.RE
.SH "Selected Bug Fixes"
.IX Header "Selected Bug Fixes"
.IP "\(bu" 4
Fix \s-1CVE\-2016\-2381\s0 sanitize duplicate environ entries
.Sp
Make sure we use the same value in \f(CW%ENV\fR that \fIgetenv()\fR returns.
Remove duplicate entries from environ.
.Sp
Previously if there was a duplicate definition for a name in environ[]
setting that name in \f(CW%ENV\fR could result in an unsafe value being passed
to a child process.
.IP "\(bu" 4
Fix \s-1CVE\-2012\-3878\s0 [RT#776270] module loading security weakness
.Sp
Treat invalid names to require, such as ::foo as error.
New errors:
.Sp
Bareword in require contains \*(L"%s\*(R", with \*(L"\e0\*(R", \*(L"./\*(R" or \*(L"../\*(R" as invalid substrings.
.Sp
Bareword in require maps to empty filename
.Sp
Bareword in require maps to disallowed filename \*(L"%s\*(R", with absolute
filenames, filenames starting with \*(L".\*(R" or not ending with \*(L".pm\*(R".
.IP "\(bu" 4
uncow on utf8::encode [cperl #50]
.IP "\(bu" 4
Fixed double-free with overlong names, esp. Moose [cperl #128]
.Sp
Improve and fix CopFILE_set in S_incline. Don't call gv_fetchfile_flags 2x
with unthreaded perls. Enlarge the temp. buffer on the stack from 128 to
160.
.IP "\(bu" 4
Fixed compilation with \-DDEBUGGING and usethreads
.Sp
In the new loop bounds check elimination code.
.IP "\(bu" 4
Fixed ByteLoader [cperl #75]
.Sp
Fixed breakage from perl5.22.0 in op.\fIc:newPROG()\fR
.IP "\(bu" 4
Fixed ck_pad: \s-1PADSV\s0 \-> \s-1CONST\s0 corrupts OpSLOT
.Sp
Wrong optimization of a readonly lexical to a const did corrupt
memory. [cperl #108]
.IP "\(bu" 4
dump fix \s-1SEGV\s0 on \s-1DESTROY\s0 SvSTASH [cperl #59]
.Sp
We can only access a SvSTASH if it is a SvOBJECT.
This failed e.g. for \f(CW%version::\fR stashes.
.Sp
Unsure of we should follow p5p recent change to move the \s-1DESTROY\s0
cache back to mro.
.IP "\(bu" 4
dump fix assert on SvTAIL and !SvSCREAM
.Sp
It failed with \s-1DEBUGGING\s0 and \s-1ITHREADS\s0 on an \s-1SCREAM,FAKE,OUR\s0 padname,
i.e. our \f(CW@Data_Stack\fR from Test::More.
Unfortunately we cannot reproduce this error with core methods, only with
Internals::DumpArenas, which dumps the \s-1PADNAME\s0 as full \s-1SV.\s0
[cperl #59] [cpan #81635]
.IP "\(bu" 4
podcheck.t: no memory exhaustion
.Sp
Skip slurping overlarge logfiles > 1MB,
e.g. valgrind logfiles, esp. on 32bit.
podcheck does not look at the filename extension
if it's a potential podfile.
.IP "\(bu" 4
Fixed out-of-bounds access in \fIdirp_dup()\fR
.Sp
From perl\-5.23.7
.IP "\(bu" 4
S_incline avoid overrunning end of parse buffer
.Sp
[perl #127334] If the rest of the allocation up to the end addressable
memory was non-spaces, this loop could cause a segmentation fault.
.Sp
From perl\-5.23.7
.IP "\(bu" 4
[perl #126481] panic for !! with syntax error in /(?[...])/
.IP "\(bu" 4
[perl #126325] don't read past the end of the source for pack [Hh]
.Sp
With a utf8 target but a non\-utf8 source, pack Hh would read past the
end of the source when given a length, due to an incorrect condition.
.IP "\(bu" 4
Enforce strict 'subs' in multideref optimisation
.Sp
The code that checks constant keys and turns them into HEKs swallowed
the \s-1OP_CONST\s0 before the strictness checker could get to it, thus
allowing barewords when they should not be
.IP "\(bu" 4
Configure: fix startperl and perlpath
.Sp
Config entries for cperl.
.SH "Other"
.IX Header "Other"
.IP "\(bu" 4
Enhanced Porting/sync\-with\-cpan
.Sp
Support \f(CW\*(C`\-\-all\*(C'\fR updating all cpan/dist modules
.Sp
Add options \f(CW\*(C`\-n|\-\-dryrun\*(C'\fR, \f(CW\*(C`\-m|\-\-make\-c\*(C'\fR
.Sp
Handle dist also.
.SH "Acknowledgements"
.IX Header "Acknowledgements"
Daniel Dragan took over XSConfig development on \s-1CPAN.\s0
.PP
Dave Mitchell started to work on some tasks proposed in cperl.
.PP
cperl 5.22.2 represents approximately 7 months of development since cperl
5.22.1c and contains approximately 260,000 lines of changes across 1,500 files
from 39 authors.
.PP
Excluding auto-generated files, documentation and release tools, there were
approximately 180,000 lines of changes to 1,000 .pm, .t, .c and .h files.
.PP
The following people are known to have contributed the improvements that became
cperl 5.22.2:
.PP
Reini Urban, Daniel Dragan, Steve Hay, Jarkko Hietaniemi, Tony Cook, Karl
Williamson, David Mitchell, Ricardo Signes, Matthew Horsfall, Abigail,
Aristotle Pagaltzis, Aaron Crane, David Golden, Jan Dubois, Craig A. Berry,
Nicolas Rochelemagne, Todd Rinaldo, James E Keenan, Peter Martini, Nicholas
Clark, Niko Tyni, Karen Etheridge, Sisyphus, Victor Adam, Sawyer X, Yves Orton,
Stevan Little, Vladimir Timofeev, Andreas Ko\*:nig, Leon Timmermans, Hugo van der
Sanden, Andy Broad, Father Chrysostomos, Helmut Wollmersdorfer, Lukas Mai,
H.Merijn Brand, Herbert Breunung, Ivan Pozdeev, Dagfinn Ilmari Mannsa\*oker.
.PP
The list above is almost certainly incomplete as it is automatically generated
from version control history including the perl and cperl repos. In particular,
it does not include the names of the (very much appreciated) contributors who
reported issues to the Perl bug tracker and the cperl github issues.
.PP
Many of the changes included in this version originated in the \s-1CPAN\s0
modules included in Perl's core. We're grateful to the entire \s-1CPAN\s0
community for helping Perl to flourish. Their quality of work succeeds
the work of the perl5 porters by far.
.SH "Reporting Bugs"
.IX Header "Reporting Bugs"
If you find what you think is a bug, you might check the articles recently
posted to the comp.lang.perl.misc newsgroup and the perl bug database at
<https://rt.perl.org/> .  There may also be information at
<http://www.perl.org/> , the Perl Home Page.
.PP
If you believe you have an unreported bug, please run the \f(CW\*(C`perlbug\*(C'\fR program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of \f(CW\*(C`perl \-V\*(C'\fR,
will be sent off to \f(CW\*(C`perlbug@perl.org\*(C'\fR to be analysed by the Perl porting team.
.PP
If you think it's a cperl specific bug or trust the cperl developers more 
please file an issue at <https://github.com/perl11/cperl/issues>.
.PP
If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send it
to \f(CW\*(C`perl5\-security\-report@perl.org\*(C'\fR.  This points to a closed subscription
unarchived mailing list, which includes all the p5p core committers, who will be
able to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported.  Please only use this address for
security issues in the Perl core, not for modules independently distributed on
\&\s-1CPAN.\s0
.PP
If you trust the cperl developers more, please send an email to
them. The p5p security teams skips many security issues, or are
unwilling to fix them.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
The \fIChanges\fR file for an explanation of how to view exhaustive details on
what changed.
.PP
The \fI\s-1INSTALL\s0\fR file for how to build Perl.
.PP
The \fI\s-1README\s0\fR file for general stuff.
.PP
The \fIArtistic\fR and \fICopying\fR files for copyright information.
