.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "StackTrace::Auto 3"
.TH StackTrace::Auto 3 "2015-07-01" "perl v5.22.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
StackTrace::Auto \- a role for generating stack traces during instantiation
.SH "VERSION"
.IX Header "VERSION"
version 0.200013
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
First, include StackTrace::Auto in a Moose or Mooclass...
.PP
.Vb 4
\&  package Some::Class;
\&  # NOTE: Moo can also be used here instead of Moose
\&  use Moose;
\&  with \*(AqStackTrace::Auto\*(Aq;
.Ve
.PP
\&...then create an object of that class...
.PP
.Vb 1
\&  my $obj = Some::Class\->new;
.Ve
.PP
\&...and now you have a stack trace for the object's creation.
.PP
.Vb 1
\&  print $obj\->stack_trace\->as_string;
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "stack_trace"
.IX Subsection "stack_trace"
This attribute will contain an object representing the stack at the point when
the error was generated and thrown.  It must be an object performing the
\&\f(CW\*(C`as_string\*(C'\fR method.
.SS "stack_trace_class"
.IX Subsection "stack_trace_class"
This attribute may be provided to use an alternate class for stack traces.  The
default is Devel::StackTrace.
.PP
In general, you will not need to think about this attribute.
.SS "stack_trace_args"
.IX Subsection "stack_trace_args"
This attribute is an arrayref of arguments to pass when building the stack
trace.  In general, you will not need to think about it.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Ricardo \s-1SIGNES\s0 <rjbs@cpan.org>
.IP "\(bu" 4
Florian Ragwitz <rafl@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2015 by Ricardo \s-1SIGNES.\s0
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
