.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "PerlIO::utf8_strict 3"
.TH PerlIO::utf8_strict 3 "2017-04-06" "perl v5.22.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PerlIO::utf8_strict \- Fast and correct UTF\-8 IO
.SH "VERSION"
.IX Header "VERSION"
version 0.007
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& open my $fh, \*(Aq<:utf8_strict\*(Aq, $filename;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a fast and correct \s-1UTF\-8\s0 PerlIO layer. Unlike perl's default \f(CW\*(C`:utf8\*(C'\fR layer it checks the input for correctness.
.SH "LAYER ARGUMENTS"
.IX Header "LAYER ARGUMENTS"
.IP "allow_noncharacters" 4
.IX Item "allow_noncharacters"
.PD 0
.IP "allow_surrogates" 4
.IX Item "allow_surrogates"
.PD
.SH "EXPORT"
.IX Header "EXPORT"
PerlIO::utf8_strict exports no subroutines or symbols, just a perl layer \f(CW\*(C`utf8_strict\*(C'\fR
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.IP "Can't decode ill-formed \s-1UTF\-8\s0 octet sequence <%s>" 4
.IX Item "Can't decode ill-formed UTF-8 octet sequence <%s>"
(F) Encountered an ill-formed \s-1UTF\-8\s0 octet sequence. <%s> contains a hexadecimal 
representation of the maximal subpart of the ill-formed subsequence.
.IP "Can't interchange noncharacter code point U+%.4X" 4
.IX Item "Can't interchange noncharacter code point U+%.4X"
(F) Noncharacters is permanently reserved for internal use and that should 
never be interchanged. Noncharacters consist of the values U+nFFFE and U+nFFFF 
(where n is from 0 to 10^16) and the values U+FDD0..U+FDEF.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Leon Timmermans <leont@cpan.org>
.IP "\(bu" 4
Christian Hansen <chansen@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2012 by Leon Timmermans, Christian Hansen.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
