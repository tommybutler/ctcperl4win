.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Test::More::UTF8 3"
.TH Test::More::UTF8 3 "2017-06-24" "perl v5.22.5" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Test::More::UTF8 \- Enhancing Test::More for UTF8\-based projects
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&        use Test::More;
\&        use Test::More::UTF8;
\&
\&        # now we can easily use flagged strings without warnings like "Wide character in print ..."
\&        is("\ex{410}","\ex{420}"); # got a failure message without warnings
.Ve
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
.Vb 1
\&        This module have reason only for perl 5.8 and higher
.Ve
.SH "FEATURES"
.IX Header "FEATURES"
This module also switch on by default utf8 pragma. To disable this, add \*(L"\-utf8\*(R" option
.PP
.Vb 1
\&        use Test::More::UTF8 qw(\-utf8);
.Ve
.PP
By default binmode ':utf8' will be done on all output handles: failure_output, todo_output, output. It is possible to choose only some of them
.PP
.Vb 3
\&        use Test::More::UTF8 qw(failure); # enable :utf8 only on failure_output
\&        use Test::More::UTF8 qw(todo); # enable :utf8 only on todo_output
\&        use Test::More::UTF8 qw(out); # enable :utf8 only on output
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Mons Anderson, <mons@cpan.org>
.SH "BUGS"
.IX Header "BUGS"
None known
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Mons Anderson, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
