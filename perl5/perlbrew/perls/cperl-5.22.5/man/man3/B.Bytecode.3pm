.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "B::Bytecode 3pm"
.TH B::Bytecode 3pm "2018-01-01" "perl v5.22.5" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
B::Bytecode \- Perl compiler's bytecode backend
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBperl \-MO=Bytecode\fR[\fB,\-H\fR][\fB,\-o\fR\fIscript.plc\fR] \fIscript.pl\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Compiles a Perl script into a bytecode format that could be loaded
later by the ByteLoader module and executed as a regular Perl script.
This saves time for the optree parsing and compilation and space for
the sourcecode in memory.
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 3
\&    $ perl \-MO=Bytecode,\-H,\-ohi \-e \*(Aqprint "hi!\en"\*(Aq
\&    $ perl hi
\&    hi!
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-H\fR" 4
.IX Item "-H"
Prepend a \f(CW\*(C`use ByteLoader VERSION;\*(C'\fR line to the produced bytecode.
This way you will not need to add \f(CW\*(C`\-MByteLoader\*(C'\fR to your perl command-line.
.Sp
Beware: This option does not yet work with 5.18 and higher. You need to use
\&\f(CW\*(C`\-MByteLoader\*(C'\fR still.
.IP "\fB\-i\fR includeall" 4
.IX Item "-i includeall"
Include all used packages and its symbols. Does no run-time require from
\&\s-1BEGIN\s0 blocks (\f(CW\*(C`use\*(C'\fR package).
.Sp
This creates bigger and more independent code, but is more error prone and
does not support pre-compiled \f(CW\*(C`.pmc\*(C'\fR modules.
.Sp
It is highly recommended to use \f(CW\*(C`\-i\*(C'\fR together with \f(CW\*(C`\-b\*(C'\fR \fIsafebegin\fR.
.IP "\fB\-b\fR savebegin" 4
.IX Item "-b savebegin"
Save all the \s-1BEGIN\s0 blocks.
.Sp
Normally only \s-1BEGIN\s0 blocks that \f(CW\*(C`require\*(C'\fR
other files (ex. \f(CW\*(C`use Foo;\*(C'\fR) or push|unshift
to \f(CW@INC\fR are saved.
.IP "\fB\-k\fR" 4
.IX Item "-k"
Keep the syntax tree \- it is stripped by default.
.IP "\fB\-o\fR\fIoutfile\fR" 4
.IX Item "-ooutfile"
Put the bytecode in <outfile> instead of dumping it to \s-1STDOUT.\s0
.IP "\fB\-s\fR" 4
.IX Item "-s"
Scan the script for \f(CW\*(C`# line ..\*(C'\fR directives and for <goto \s-1LABEL\s0>
expressions. When gotos are found keep the syntax tree.
.IP "\fB\-S\fR" 4
.IX Item "-S"
Output assembler source rather than piping it through the assembler
and outputting bytecode.
Without \f(CW\*(C`\-q\*(C'\fR the assembler source is commented.
.IP "\fB\-m\fR" 4
.IX Item "-m"
Compile to a \fI.pmc\fR module rather than to a single standalone \fI.plc\fR program.
.Sp
Currently this just means that the bytecodes for initialising \f(CW\*(C`main_start\*(C'\fR,
\&\f(CW\*(C`main_root\*(C'\fR, \f(CW\*(C`main_cv\*(C'\fR and \f(CW\*(C`curpad\*(C'\fR are omitted.
.IP "\fB\-u\fR\fIpackage\fR" 4
.IX Item "-upackage"
\&\*(L"use package.\*(R" Might be needed of the package is not automatically detected.
.IP "\fB\-F\fR\fIfile\fR" 4
.IX Item "-Ffile"
Include file. If not \f(CW\*(C`\-i\*(C'\fR define all symbols in the given included
source file. \f(CW\*(C`\-i\*(C'\fR would all included files,
\&\f(CW\*(C`\-F\*(C'\fR only a certain file \- full path needed.
.IP "\fB\-q\fR" 4
.IX Item "-q"
Be quiet.
.IP "\fB\-v\fR" 4
.IX Item "-v"
Be verbose.
.IP "\fB\-TI\fR" 4
.IX Item "-TI"
Restore full \f(CW@INC\fR for running within the \s-1CORE\s0 testsuite.
.IP "\fB\-TF\fR \fIcop file\fR" 4
.IX Item "-TF cop file"
Set the \s-1COP\s0 file \- for running within the \s-1CORE\s0 testsuite.
.IP "\fB\-Do\fR" 4
.IX Item "-Do"
OPs, prints each \s-1OP\s0 as it's processed
.IP "\fB\-DM\fR" 4
.IX Item "-DM"
Debugging flag for more verbose \s-1STDERR\s0 output.
.Sp
\&\fBM\fR for Magic and Matches.
.IP "\fB\-DG\fR" 4
.IX Item "-DG"
Debug \s-1GV\s0's
.IP "\fB\-DA\fR" 4
.IX Item "-DA"
Set developer \fBA\fRssertions, to help find possible obj-indices out of range.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
.IP "\(bu" 4
5.10 threaded fails with setting the wrong \s-1MATCH\s0 op_pmflags
5.10 non-threaded fails calling anoncode, ...
.IP "\(bu" 4
\&\f(CW\*(C`BEGIN { goto A: while 1; A: }\*(C'\fR won't even compile.
.IP "\(bu" 4
\&\f(CW\*(C`?...?\*(C'\fR and \f(CW\*(C`reset\*(C'\fR do not work as expected.
.IP "\(bu" 4
variables in \f(CW\*(C`(?{ ... })\*(C'\fR constructs are not properly scoped.
.IP "\(bu" 4
Scripts that use source filters will fail miserably.
.IP "\(bu" 4
Special \s-1GV\s0's fail.
.SH "NOTICE"
.IX Header "NOTICE"
There are also undocumented bugs and options.
.SH "AUTHORS"
.IX Header "AUTHORS"
Originally written by Malcolm Beattie 1996 and
modified by Benjamin Stuhl <sho_pi@hotmail.com>.
.PP
Rewritten by Enache Adrian <enache@rdslink.ro>, 2003 a.d.
.PP
Enhanced by Reini Urban <rurban@cpan.org>, 2008\-2012
